/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Entity.User;
import Helper.JdbcHelper;
import Model.UserDAO;
import java.sql.SQLException;
import java.util.List;
import java.util.Locale;
import java.util.ResourceBundle;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ADMIN
 */
public class UserManagement extends javax.swing.JDialog {

    JdbcHelper dbConn = null;
    User user = null;
    Locale loca = null;
    ResourceBundle bun = null;

    /**
     * Creates new form UserManagement
     */
    public UserManagement(java.awt.Frame parent, boolean modal, JdbcHelper dBConn, Locale loca, ResourceBundle bun) {
        super(parent, modal);
        initComponents();
        this.dbConn = dBConn;
        initUser();
        this.loca = loca;
        this.bun = bun;
        setLanguage();
        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbUser = new javax.swing.JTable();
        lbID = new javax.swing.JLabel();
        lbUsername = new javax.swing.JLabel();
        lbPass = new javax.swing.JLabel();
        lbName = new javax.swing.JLabel();
        lbPhone = new javax.swing.JLabel();
        lbMail = new javax.swing.JLabel();
        lbType = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        txtUsername = new javax.swing.JTextField();
        txtpass = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        txtPhone = new javax.swing.JTextField();
        txtMail = new javax.swing.JTextField();
        cbType = new javax.swing.JComboBox<>();
        btAdd = new javax.swing.JButton();
        btUpdate = new javax.swing.JButton();
        btClear = new javax.swing.JButton();
        btDelete = new javax.swing.JButton();
        lable = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tbUser.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Username", "Password", "Name", "Phone", "Mail", "Type"
            }
        ));
        tbUser.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbUserMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbUser);

        lbID.setText("ID");

        lbUsername.setText("Username");

        lbPass.setText("Password");

        lbName.setText("Name");

        lbPhone.setText("Phone");

        lbMail.setText("Mail");

        lbType.setText("Type");

        txtID.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        txtUsername.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        txtpass.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        txtName.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        txtPhone.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        txtMail.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        cbType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Admin", "Seller", "Inventory staff" }));

        btAdd.setText("Add");
        btAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAddActionPerformed(evt);
            }
        });

        btUpdate.setText("Update");
        btUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btUpdateActionPerformed(evt);
            }
        });

        btClear.setText("Clear");
        btClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btClearActionPerformed(evt);
            }
        });

        btDelete.setText("Delete");
        btDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDeleteActionPerformed(evt);
            }
        });

        lable.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 556, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(59, 59, 59)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btAdd)
                                .addGap(31, 31, 31)
                                .addComponent(btUpdate)
                                .addGap(40, 40, 40)
                                .addComponent(btClear))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbID)
                                    .addComponent(lbUsername)
                                    .addComponent(lbPass)
                                    .addComponent(lbName)
                                    .addComponent(lbPhone)
                                    .addComponent(lbMail)
                                    .addComponent(lbType))
                                .addGap(30, 30, 30)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cbType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtID)
                                    .addComponent(txtUsername)
                                    .addComponent(txtpass)
                                    .addComponent(txtName)
                                    .addComponent(txtPhone)
                                    .addComponent(txtMail)
                                    .addComponent(lable, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(449, 449, 449)
                        .addComponent(btDelete)))
                .addContainerGap(133, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lable, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbID)
                                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(19, 19, 19)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lbUsername)
                                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(33, 33, 33)
                                .addComponent(lbPass))
                            .addComponent(txtpass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbName)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbPhone)
                            .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbMail)
                            .addComponent(txtMail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbType)
                            .addComponent(cbType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(44, 44, 44)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btAdd)
                            .addComponent(btUpdate)
                            .addComponent(btClear)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 412, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btDelete)
                .addContainerGap(56, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {txtID, txtMail, txtName, txtPhone, txtUsername, txtpass});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btUpdateActionPerformed
        try {
            int id = Integer.parseInt(txtID.getText());
            String mail = txtMail.getText();
            String name = txtName.getText();
            String phone = txtPhone.getText();
            String username = txtUsername.getText();
            String pass = txtpass.getText();
            String type = (String) cbType.getSelectedItem();
            UserDAO dao = new UserDAO();
            dao.updateUser(username, pass, id, name, phone, mail, type);
            initUser();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(UserManagement.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(UserManagement.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(UserManagement.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btUpdateActionPerformed

    private void btClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btClearActionPerformed
        txtID.setText("");
        txtMail.setText("");
        txtName.setText("");
        txtPhone.setText("");
        txtUsername.setText("");
        txtpass.setText("");
    }//GEN-LAST:event_btClearActionPerformed

    /*
      @purpose: when cliked mouse on a row => get information to txt
     */
    private void tbUserMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbUserMouseClicked
        int row = tbUser.getSelectedRow();
        //    JOptionPane.showMessageDialog(this, row);
        txtID.setText(String.valueOf(tbUser.getValueAt(row, 0)));
        txtUsername.setText((String) tbUser.getValueAt(row, 1));
        txtpass.setText((String) tbUser.getValueAt(row, 2));
        txtName.setText((String) tbUser.getValueAt(row, 3));
        txtPhone.setText((String) tbUser.getValueAt(row, 4));
        txtMail.setText((String) tbUser.getValueAt(row, 5));
        String type = (String) tbUser.getValueAt(row, 6);
        switch (type) {
            case "admin":
                cbType.setSelectedIndex(0);
                break;
            case "seller":
                cbType.setSelectedIndex(1);
                break;
            case "Inventory staff":
                cbType.setSelectedIndex(2);
                break;
        }
    }//GEN-LAST:event_tbUserMouseClicked

    private void btDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDeleteActionPerformed
        try {
            int row = tbUser.getSelectedRow();
            int id = Integer.parseInt(String.valueOf(tbUser.getValueAt(row, 0)));
            UserDAO dao = new UserDAO();
            dao.deleteUserByID(id);
            initUser();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(UserManagement.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(UserManagement.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(UserManagement.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btDeleteActionPerformed

    private void btAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAddActionPerformed
        try {
            String mail = txtMail.getText();
            String name = txtName.getText();
            String phone = txtPhone.getText();
            String username = txtUsername.getText();
            String pass = txtpass.getText();
            String type = (String) cbType.getSelectedItem();
            UserDAO dao = new UserDAO();
            dao.addUser(username, pass, name, phone, mail, type);
            initUser();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(UserManagement.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(UserManagement.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(UserManagement.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btAddActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAdd;
    private javax.swing.JButton btClear;
    private javax.swing.JButton btDelete;
    private javax.swing.JButton btUpdate;
    private javax.swing.JComboBox<String> cbType;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lable;
    private javax.swing.JLabel lbID;
    private javax.swing.JLabel lbMail;
    private javax.swing.JLabel lbName;
    private javax.swing.JLabel lbPass;
    private javax.swing.JLabel lbPhone;
    private javax.swing.JLabel lbType;
    private javax.swing.JLabel lbUsername;
    private javax.swing.JTable tbUser;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtMail;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPhone;
    private javax.swing.JTextField txtUsername;
    private javax.swing.JTextField txtpass;
    // End of variables declaration//GEN-END:variables

    private void initUser() {
        try {
            UserDAO dao = new UserDAO();
            List<User> listU = dao.getAllUser();
            DefaultTableModel model = (DefaultTableModel) tbUser.getModel();
            model.setRowCount(0);
            for (int i = 0; i < listU.size(); i++) {
//            tbUser.setValueAt(listU.get(i).getId(), i, 0);
//            tbUser.setValueAt(listU.get(i).getUsername(), i, 1);
//            tbUser.setValueAt(listU.get(i).getPass(), i, 2);
//            tbUser.setValueAt(listU.get(i).getName(), i, 3);
//            tbUser.setValueAt(listU.get(i).getPhone(), i, 4);
//            tbUser.setValueAt(listU.get(i).getMail(), i, 5);
//            tbUser.setValueAt(listU.get(i).getType(), i, 6);
                model.addRow(new Object[]{
                    listU.get(i).getId(), listU.get(i).getUsername(),
                    listU.get(i).getPass(), listU.get(i).getName(), listU.get(i).getPhone(),
                    listU.get(i).getMail(), listU.get(i).getType()
                });
            }
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(UserManagement.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(UserManagement.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void setLanguage() {
        lbName.setText(bun.getString("name"));
        lbPass.setText(bun.getString("pass"));
        lbUsername.setText(bun.getString("username"));
        lbPhone.setText(bun.getString("phone"));
        lbType.setText(bun.getString("type"));
        btAdd.setText(bun.getString("add"));
        btClear.setText(bun.getString("clear"));
        btDelete.setText(bun.getString("delete"));
        btClear.setText(bun.getString("clear"));
    }
}
